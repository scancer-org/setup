torchserve
----------

In the VM:

1. Setup folders and fetch TorchServe code
   ````
   mkdir api
   cd api
   git@github.com:pytorch/serve.git
   cd serve
   ````

3. Install TorchServe and its dependencies
   ````
   apt-get install python3-venv
   python3 -m venv venv
   # Fix up ts_scripts/install_dependencies.py to remove conda stuff
   python ./ts_scripts/install_dependencies.py
   pip install torchserve torch-model-archiver
   ````

4. Create a model registry and populate it with an example model
   ````
   cd ~/api
   mkdir model_store
   wget https://download.pytorch.org/models/densenet161-8d451a50.pth
   torch-model-archiver --model-name densenet161 --version 1.0 --model-file ./serve/examples/image_classifier/densenet_161/model.py --serialized-file densenet161-8d451a50.pth --export-path model_store --extra-files ./serve/examples/image_classifier/index_to_name.json --handler image_classifier
   rm densenet161-8d451a50.pth
   ````

5. Serve the model as an API
   ````
   torchserve --start --ncs --model-store model_store --models densenet161.mar
   ````

6. Setup nginx proxy to proxy to this model serve API
   ````
   # create /etc/nginx/sites-available/api.scancer-local.org
   sudo ln -s /etc/nginx/sites-available/api.scancer-local.org /etc/nginx/sites-enabled/
   sudo mkdir /data/log/api
   cd /data/log/
   sudo chown www-data:www-data api
   sudo service nginx restart
   ````

7. Access the API from elsewhere
   ````
   wget https://raw.githubusercontent.com/pytorch/serve/master/examples/image_classifier/kitten.jpg
   curl -k https://api.scancer-local.org/predictions/densenet161 -T kitten.jpg
   ````

8. Shut down the server
   ````
   torchserve --stop
   ````
